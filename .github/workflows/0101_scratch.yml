name: Build and Push Docker Image 0101_scratch

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: 0101_scratch
  REGISTRY: ghcr.io
  USERNAME: nulshh
  TAG: 1.0.0
  
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Log in to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ secrets.MY_USERNAME }}
#          password: ${{ secrets.MY_TOKEN }}
#     
#
#      - name: Clear Docker cache
#        run: docker builder prune --all
#        continue-on-error: true
#
#      - name: Telegram sender
#        uses: robotomize/notify-telegram@v0.2.4
#        with:
#          chat: ${{ secrets.TLG_CHAT_ID }}
#          token: ${{ secrets.TLG_TOKEN }}
#          status: Deployed by Actor ${{ github.actor }}
#          message: "Wow! We have updates: in repository ${{ github.repository }} with branch ${{ github.ref }} Event: ${{ github.event_name }}"
##chat: -1001948676627
#token: 6081641656:AAE2PUsNkNvpVvlwsxymfBfKSKF42VXD2hU

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.MY_USERNAME }}
          password: ${{ secrets.MY_TOKEN }}

      - name: Clear Docker cache
        run: docker builder prune --all
        continue-on-error: true

      - name: Build and Deploy to Production
        id: deploy_step
        run: |
          # Your build and deploy commands here
          # For example:
          echo "Running build..."
          make build
          echo "Deploying..."
          if ! make deploy; then
            echo "error" >> deployment_status.txt
          fi
        continue-on-error: true

      - name: Telegram sender - Success
        if: success()
        run: |
          echo "Deployment to Production was successful!"
        continue-on-error: true

      - name: Telegram sender - Failure
        if: failure() && contains(file('deployment_status.txt'), 'error')
        run: |
          echo "Deployment to Production failed. Check the logs for more details." >> deployment_error_message.txt
        continue-on-error: true

      - name: Notify on Success
        if: success()
        uses: robotomize/notify-telegram@v0.2.4
        with:
          chat: ${{ secrets.TLG_CHAT_ID }}
          token: ${{ secrets.TLG_TOKEN }}
          status: Deployed by Actor ${{ github.actor }}
          message: "Wow! We have updates: in repository ${{ github.repository }} with branch ${{ github.ref }} Event: ${{ github.event_name }}"

      - name: Notify on Failure
        if: failure() && contains(file('deployment_status.txt'), 'error')
        run: |
          cat deployment_error_message.txt
        uses: robotomize/notify-telegram@v0.2.4
        with:
          chat: ${{ secrets.TLG_CHAT_ID }}
          token: ${{ secrets.TLG_TOKEN }}
          status: Deployed by Actor ${{ github.actor }}
          message: "Error message: ${{ steps.deploy_step.outputs.message }}"


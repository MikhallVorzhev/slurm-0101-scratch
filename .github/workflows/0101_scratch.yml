name: Build and Push Docker Image 0101_scratch

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: 0101_scratch
  REGISTRY: ghcr.io
  USERNAME: nulshh
  TAG: 1.0.0
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.RREGISTRY }}
          username: ${{ secrets.MY_USERNAME }}
          password: ${{ secrets.MY_TOKEN }}

      - name: Clear Docker cache
        run: docker builder prune --all


      - name: NotifyOnSuccess
        if: success()
        uses: robotomize/notify-telegram@v0.2.4
        with:
          chat: -1001948676627
          token: 6081641656:AAE2PUsNkNvpVvlwsxymfBfKSKF42VXD2hU
          status: "Deployed by ${{ github.actor }}"
          message: "Deployment to Production was successful!"
    
      - name: NotifyOnFailure
        if: failure()
        run: |
          cat deployment_error.txt | xargs -I {} sh -c 'echo "Error message: {}"' >> deployment_error_message.txt
        uses: robotomize/notify-telegram@v0.2.4
        with:
          chat: -1001948676627
          token: 6081641656:AAE2PUsNkNvpVvlwsxymfBfKSKF42VXD2hU
          status: "Deployed by ${{ github.actor }}"
          message: "Deployment to Production failed! Error message: $(cat deployment_error_message.txt)"

#      - name: Telegram sender
#  # You may pin to the exact commit or the version.
#  # uses: robotomize/notify-telegram@f2821d117115d48ccbbde7609d2029603ee55b7e
#        uses: robotomize/notify-telegram@v0.2.4
#        with:
#    # Chat to send: chat id or @channel_name
#          chat: -1001948676627
#    # Telegram Bot token
#          token: 6081641656:AAE2PUsNkNvpVvlwsxymfBfKSKF42VXD2hU
#    # Job status
#          status: Deployed by Actor ${{ github.actor }}
#    # Custom message
#          message: "Wow! We have updates: in repository ${{ github.repository }} with branch ${{ github.ref }} Event: ${{ github.event_name }}"
#
